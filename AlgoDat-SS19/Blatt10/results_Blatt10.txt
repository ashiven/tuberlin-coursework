ashiven,  09.07.2019, 02:07:10
Korrektur Blatt 10

Aufgabe 1.1
	Test output of manhattan() on complex boards: 0/5
	  java.lang.AssertionError: Method 'manhattan()' does not return the expected result.
We called manhattan() for the following board:
 1  3  8  9  5 
17 12  4  2 10 
 0  6  7 14 15 
11 16 13 18 20 
21 22 23 19 24 
According to our reference method the Manhattan heuristic is 22, while your return value 28.
	Test output of manhattan() on medium complex boards: 0/5
	  java.lang.AssertionError: Method 'manhattan()' does not return the expected result.
We called manhattan() for the following board:
 0  2  3 
 4  5  1 
 7  8  6 
According to our reference method the Manhattan heuristic is 4, while your return value 8.
	Test output of manhattan() on simple boards: 0/5
	  java.lang.AssertionError: Method 'manhattan()' does not return the expected result.
We called manhattan() for the following board:
 1  2  3 
 0  5  6 
 7  8  4 
According to our reference method the Manhattan heuristic is 3, while your return value 6.
Total points for Aufgabe 1.1: 0/15

Aufgabe 1.2
	Test output of compareTo() on fresh PartialSolutions (without performing moves): 4/4
	Test output of compareTo() on PartialSolutions after performing moves: 4/4
	Test the copy constructor (requires doMove() and isSolution() to work): 4/4
	Test doMove() (requires isSolution() to work): 4/4
	Test output of isSolution(): 4/4
	Test output of moveSequence(): 1/1
	Test output of validMoves(): 4/4
Total points for Aufgabe 1.2: 25/25

Aufgabe 1.3
	Test solveByAStar() with moderate 3x3 boards: 10/10
	Test solveByAStar() with simple 3x3 boards: 10/10
	Test solveByAStar() with moderate 4x4 boards: 10/10
	Test solveByAStar() with simple 4x4 boards: 10/10
	Test solveByAStar() with moderate 5x5 boards: 10/10
	Test solveByAStar() with simple non-quadratic boards: 5/5
	Test solveByAStar() with hard 6x6 boards: 0/5
	  java.lang.AssertionError: Method solveByAStar() does not return the expected result.
We called solveByAStar() for the following board:
 1  2  3  4 11  5 
 7  8  9 10  6 12 
14 19 21 15 22 16 
13 26 20 23 35 17 
25 32 27 34 29  0 
31 33 28 30 24 18 
The required number of moves is43, but your method
returned a move sequence containing45 moves.
Total points for Aufgabe 1.3: 55/60

Total points: 80/100
