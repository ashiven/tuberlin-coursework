---
- name: Deploy web application to Kubernetes
  hosts: k8s-node-1
  become: true
  tasks:
     - name: Install dependencies
       shell: |
          apt-get update
          apt-get install -y python3-pip
          pip3 install kubernetes pyyaml jsonpatch

     - name: Create Kubernetes namespace
       kubernetes.core.k8s:
          state: present
          definition:
             apiVersion: v1
             kind: Namespace
             metadata:
                name: webapp

     - name: Deploy backend Deployment
       kubernetes.core.k8s:
          state: present
          definition:
             apiVersion: apps/v1
             kind: Deployment
             metadata:
                name: backend
                namespace: webapp
             spec:
                replicas: 6
                selector:
                   matchLabels:
                      app: backend
                template:
                   metadata:
                      labels:
                         app: backend
                   spec:
                      containers:
                         - name: backend
                           image: ashiven/backend:1.0
                           ports:
                              - containerPort: 8080
                           readinessProbe:
                              httpGet:
                                 path: /health
                                 port: 8080
                              initialDelaySeconds: 5
                              periodSeconds: 10
                           livenessProbe:
                              httpGet:
                                 path: /health
                                 port: 8080
                              initialDelaySeconds: 10
                              periodSeconds: 20

     - name: Deploy backend Service
       kubernetes.core.k8s:
          state: present
          definition:
             apiVersion: v1
             kind: Service
             metadata:
                name: cc-backend-service
                namespace: webapp
             spec:
                selector:
                   app: backend
                ports:
                   - protocol: TCP
                     port: 8080
                     targetPort: 8080
                type: ClusterIP

     - name: Deploy frontend Deployment
       kubernetes.core.k8s:
          state: present
          definition:
             apiVersion: apps/v1
             kind: Deployment
             metadata:
                name: frontend
                namespace: webapp
             spec:
                replicas: 4
                selector:
                   matchLabels:
                      app: frontend
                template:
                   metadata:
                      labels:
                         app: frontend
                   spec:
                      containers:
                         - name: frontend
                           image: ashiven/frontend:1.0
                           ports:
                              - containerPort: 8080
                           readinessProbe:
                              httpGet:
                                 path: /health
                                 port: 8080
                              initialDelaySeconds: 5
                              periodSeconds: 10
                           livenessProbe:
                              httpGet:
                                 path: /health
                                 port: 8080
                              initialDelaySeconds: 10
                              periodSeconds: 20

     - name: Deploy frontend Service
       kubernetes.core.k8s:
          state: present
          definition:
             apiVersion: v1
             kind: Service
             metadata:
                name: frontend
                namespace: webapp
             spec:
                selector:
                   app: frontend
                ports:
                   - protocol: TCP
                     port: 8080
                     targetPort: 8080
                     nodePort: 30001
                type: NodePort
